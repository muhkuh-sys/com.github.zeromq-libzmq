diff -uNr zeromq-4.3.4/src/condition_variable.hpp zeromq-4.3.4_patched/src/condition_variable.hpp
--- zeromq-4.3.4/src/condition_variable.hpp	2021-01-03 22:46:01.000000000 +0100
+++ zeromq-4.3.4_patched/src/condition_variable.hpp	2022-04-14 16:59:26.754415409 +0200
@@ -35,6 +35,14 @@
 
 //  Condition variable class encapsulates OS mutex in a platform-independent way.
 
+#if defined(__MINGW32__) || defined(__MINGW64__)
+#undef ZMQ_USE_CV_IMPL_NONE
+#define ZMQ_USE_CV_IMPL_WIN32API 1
+#undef ZMQ_USE_CV_IMPL_STL11
+#undef ZMQ_USE_CV_IMPL_VXWORKS
+#undef ZMQ_USE_CV_IMPL_PTHREADS
+#endif
+
 #if defined(ZMQ_USE_CV_IMPL_NONE)
 
 namespace zmq
diff -uNr zeromq-4.3.4/src/thread.cpp zeromq-4.3.4_patched/src/thread.cpp
--- zeromq-4.3.4/src/thread.cpp	2021-01-03 22:46:01.000000000 +0100
+++ zeromq-4.3.4_patched/src/thread.cpp	2022-04-14 16:59:26.754415409 +0200
@@ -41,7 +41,7 @@
     return _started;
 }
 
-#ifdef ZMQ_HAVE_WINDOWS
+#if defined(ZMQ_HAVE_WINDOWS) && !(defined(__MINGW32__) || defined(__MINGW64__))
 
 extern "C" {
 #if defined _WIN32_WCE
@@ -237,12 +237,14 @@
 #include <signal.h>
 #include <unistd.h>
 #include <sys/time.h>
+#if !defined(__MINGW32__) && !defined(__MINGW64__)
 #include <sys/resource.h>
+#endif
 
 extern "C" {
 static void *thread_routine (void *arg_)
 {
-#if !defined ZMQ_HAVE_OPENVMS && !defined ZMQ_HAVE_ANDROID
+#if !defined(ZMQ_HAVE_OPENVMS) && !defined(ZMQ_HAVE_ANDROID) && !defined(__MINGW32__) && !defined(__MINGW64__)
     //  Following code will guarantee more predictable latencies as it'll
     //  disallow any signal handling in the I/O thread.
     sigset_t signal_set;
diff -uNr zeromq-4.3.4/src/thread.hpp zeromq-4.3.4_patched/src/thread.hpp
--- zeromq-4.3.4/src/thread.hpp	2021-01-03 22:46:01.000000000 +0100
+++ zeromq-4.3.4_patched/src/thread.hpp	2022-04-14 16:59:26.758415410 +0200
@@ -33,7 +33,7 @@
 #if defined ZMQ_HAVE_VXWORKS
 #include <vxWorks.h>
 #include <taskLib.h>
-#elif !defined ZMQ_HAVE_WINDOWS
+#elif !defined(ZMQ_HAVE_WINDOWS) || (defined(__MINGW32__) || defined(__MINGW64__))
 #include <pthread.h>
 #endif
 #include <set>
@@ -105,7 +105,7 @@
   private:
     bool _started;
 
-#ifdef ZMQ_HAVE_WINDOWS
+#if defined(ZMQ_HAVE_WINDOWS) && !(defined(__MINGW32__) || defined(__MINGW64__))
     HANDLE _descriptor;
 #if defined _WIN32_WCE
     DWORD _thread_id;
diff -uNr zeromq-4.3.4/tests/testutil_monitoring.cpp zeromq-4.3.4_patched/tests/testutil_monitoring.cpp
--- zeromq-4.3.4/tests/testutil_monitoring.cpp	2021-01-03 22:46:02.000000000 +0100
+++ zeromq-4.3.4_patched/tests/testutil_monitoring.cpp	2022-04-14 16:59:26.758415410 +0200
@@ -26,6 +26,7 @@
     You should have received a copy of the GNU Lesser General Public License
     along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
+#define __USE_MINGW_ANSI_STDIO 1
 #include "testutil_monitoring.hpp"
 #include "testutil_unity.hpp"
 
